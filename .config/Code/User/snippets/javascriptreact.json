{
    /*
    // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    "Print to console": {
        "prefix": "log",
        "body": [
            "console.log('$1');",
            "$2"
        ],
        "description": "Log output to console"
    }
*/
    "Print to console": {
        "prefix": "print",
        "body": [
            "console.log(`$1`)"
        ],
        "description": "Log output to console"
    },
    "output a var": {
        "prefix": "out",
        "body": [
            "console.log(`$1 is:`,$1)"
        ],
        "description": "Log output to console"
    },
    "Show some output": {
        "prefix": "show",
        "body": [
            "show(`$1`)"
        ],
        "description": "Log output using the (custom) show function"
    },
    "import react": {
        "prefix": "impre",
        "body": [
            "import React from 'react'$1"
        ],
        "description": "imports react"
    },
    "create comp": {
        "prefix": "const",
        "body": [
            "import React from 'react'\nconst $1 = function(props) \n    { \n        $2\n        return <div></div>\n    }\nexport default $1"
        ],
        "description": "creates a dumb react component"
    },
    "create smart component": {
        "prefix": "class",
        "body": [
            "\nclass $1 extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state ={}\n    }\n    \n    render() {$2\n        return <div></div>\n    }\n}\nexport default $1"
        ],
        "description": "blah it makes a smart component"
    }
}